#####
## Software configurations for installing the Heat agents
##
## This allows the usage of SoftwareDeployment resources
#####

heat_template_version: 2016-04-08

resources:
  install:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/bash
        set -eux
        # Install os-*-config utilities from the RDO project
        yum -y install https://www.rdoproject.org/repos/rdo-release.rpm
        yum -y install python-zaqarclient os-collect-config os-apply-config os-refresh-config dib-utils
        # We need jq and ansible later
        yum -y install jq ansible

  configure:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
          # Initial os-collect-config configuration
          - path: /etc/os-collect-config.conf
            content: |
              [DEFAULT]
              command = os-refresh-config
          # Templates for os-apply-config
          - path: /usr/libexec/os-apply-config/templates/etc/os-collect-config.conf
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config/os-apply-config/etc/os-collect-config.conf
          - path: /usr/libexec/os-apply-config/templates/var/run/heat-config/heat-config
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config/os-apply-config/var/run/heat-config/heat-config
          # Scripts for os-refresh-config
          #   This script calls os-apply-config to write new config files
          - path: /usr/libexec/os-refresh-config/configure.d/20-os-apply-config
            permissions: "0700"
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config/os-refresh-config/configure.d/20-os-apply-config
          #   HACK ALERT!!!
          #   This script patches the config files generated by os-apply-config to use the correct URL for the CloudFormation endpoint
          #   Hopefully, in the fullness of time we can do away with this script by configuring the Openstack installation correctly
          - path: /usr/libexec/os-refresh-config/configure.d/21-patch-configs
            permissions: "0700"
            content:
              get_file: includes/21-patch-configs
          #   This script executes the specified hook for each deployment
          - path: /usr/libexec/os-refresh-config/configure.d/55-heat-config
            permissions: "0700"
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config/os-refresh-config/configure.d/55-heat-config
          # Hook scripts
          - path: /var/lib/heat-config/hooks/script
            permissions: "0755"
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config-script/install.d/hook-script.py
          - path: /var/lib/heat-config/hooks/ansible
            permissions: "0755"
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config-ansible/install.d/hook-ansible.py
          # Notification script
          - path: /usr/bin/heat-config-notify
            permissions: "0755"
            content:
              get_file: https://raw.githubusercontent.com/openstack/heat-agents/master/heat-config/bin/heat-config-notify
          # systemd service definition
          - path: /etc/systemd/system/os-collect-config.service
            content: |
              [Unit]
              Description=Collect metadata and run hook commands.
              [Service]
              ExecStart=/usr/bin/os-collect-config
              Restart=on-failure
              [Install]
              WantedBy=multi-user.target

  start:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/bash
        systemctl enable os-collect-config
        systemctl start os-collect-config

  install_heat_agents:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: { get_resource: install }
        - config: { get_resource: configure }
        - config: { get_resource: start }

outputs:
  config:
    value: { get_resource: install_heat_agents }
